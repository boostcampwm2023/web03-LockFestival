name: CI/CD using github action & docker

on:
  push:
    branches: ["main", "dev", "HotFix/**", "Chat/**"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest # 실행 환경 지정
    steps:
      - uses: actions/checkout@v3
      - name: Docker build & push
        run: |
          docker login -u ${{ secrets.DOCKER_BACK_REPO }} -p ${{ secrets.DOCKER_BACK_PASSWORD }}
          cd ./backend
          docker build -f Dockerfile -t ${{ secrets.DOCKER_BACK_REPO }}/${{secrets.DOCKER_BACK_TAG}} .
          docker push ${{ secrets.DOCKER_BACK_REPO }}/${{secrets.DOCKER_BACK_TAG}}

          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" > .env
          echo "DATABASE_DATABASE=${{ secrets.DATABASE_DATABASE }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
          echo "MONGODB_DBNAME=${{ secrets.MONGODB_DBNAME }}" >> .env
          echo "JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET }}" >> .env
          echo "JWT_ACCESS_TOKEN_TIME=${{ secrets.JWT_ACCESS_TOKEN_TIME }}" >> .env
          echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env
          echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> .env
          echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "PORT=${{ secrets.BACK_PORT }}" >> .env
          echo "FRONTEND_BASE_URL=${{ secrets.FRONTEND_BASE_URL }}" >> .env

      - name: Copy .env to Remote Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: "./backend/.env"
          target: "~"

      - name: Copy .env to Remote Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: "./backend/docker-compose.yaml"
          target: "~"
          overwrite: true

      - name: Remove local docker-compose copied file
        run: |
          rm ./backend/docker-compose.yaml
          rm ./backend/.env

      - name: Depoly to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.KEY}}
          envs: GITHUB_SHA
          script: |
            cd ~/backend
            export DOCKER_BACK_REPO=${{secrets.DOCKER_BACK_REPO}}
            export DOCKER_BACK_TAG=${{secrets.DOCKER_BACK_TAG}}
            export DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            export DATABASE_DATABASE=${{ secrets.DATABASE_DATABASE }}
            export DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            export DATABASE_PORT=${{ secrets.DATABASE_PORT }}
            export DATABASE_USER=${{ secrets.DATABASE_USER }}
            export MONGODB_URL=${{ secrets.MONGODB_URL }}
            export MONGODB_DBNAME=${{ secrets.MONGODB_DBNAME }}
            export JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
            export JWT_ACCESS_TOKEN_TIME=${{ secrets.JWT_ACCESS_TOKEN_TIME }}
            export NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}
            export NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}
            export REDIS_URL=${{ secrets.REDIS_URL }}
            export NODE_ENV=${{ env.NODE_ENV }}
            export PORT=${{ secrets.BACK_PORT }}
            export FRONTEND_BASE_URL=${{ secrets.FRONTEND_BASE_URL }}

            sudo docker pull ${{ secrets.DOCKER_BACK_REPO }}/${{secrets.DOCKER_BACK_TAG}}
            docker-compose down
            docker-compose up -d
            rm -rf .env
